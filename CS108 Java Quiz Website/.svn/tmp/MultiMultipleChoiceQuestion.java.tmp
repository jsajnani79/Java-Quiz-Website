<<<<<<< .mine
//package QuizProject.QuestionPackage;
//
//import java.util.ArrayList;
//import java.util.HashSet;
//import java.util.Set;
//
//
//public class MultiMultipleChoiceQuestion extends Question {
//
//	ArrayList<String> possibleAnswers;
//	Set<Integer> answerIndicies; //each index in the set corresponds to an answer choice that should be marked true 
//	//might need to be a HashSet?
//	
//	public MultiMultipleChoiceQuestion(String question, ArrayList<String> possibleAnswers, Set<Integer> answerIndicies) {
//		super(question);
//		this.possibleAnswers = possibleAnswers;
//		this.answerIndicies = answerIndicies;
//	}
//
//	public int getScore(Object obj){ //obj is an set of indexes that the user has marked as true
//		if(!(obj instanceof Set<?>)) {
//			System.out.println("Error in MultiMultipleChoiceQuestion.getScore, -1 was returned");
//			return -1;
//		}
//		Set<Integer> userAnswer = (Set<Integer>) obj;
//		int score = 0;
//		for(Integer userChoice: userAnswer){
//			if(!this.answerIndicies.contains(userChoice)) return 0;
//			else score++;
//		}
//		if(score == answerIndicies.size()) return 1;
//		else return 0;
//	}
//	
//	public int getMaxScore(){
//		return 1;
//	}
//}
=======
package QuizProject.QuestionPackage;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

import QuizProject.DBConnection;


public class MultiMultipleChoiceQuestion extends Question {

	public MultiMultipleChoiceQuestion(int id, DBConnection connection) {
		super(id, connection);
	}
	
	public void createModelObject(String backgroundText, String questionText, ArrayList<String> possibleAnswers, Set<Integer> actualAnswer) {
		this.createModelObject(backgroundText, questionText, null, possibleAnswers, null, actualAnswer);
	}
	
	protected void createModelObject(String backgroundText, String questionText, String pictureURL, ArrayList<String> possibleAnswers, ArrayList<Object> additionalParameters, Set<Integer> actualAnswer) {
		ArrayList<Object> parameters = new ArrayList<Object>(Arrays.asList());

		if (additionalParameters != null) {
			parameters.addAll(additionalParameters);
		}

		super.createModelObject(backgroundText, questionText, pictureURL, possibleAnswers, parameters);
		
		MultiMultipleChoiceAnswer ans = new MultiMultipleChoiceAnswer(0, this.getConnection());
		ArrayList<String> actualAnswers = new ArrayList<String>();
		for (int selection : actualAnswer){
			actualAnswers.add(Integer.toString(selection));
		}
		ans.createModelObject(this.getID(), -1, actualAnswers);
	}
	
	public int getMaxScore(){
		return 1;
	}
	
	public int getScore(Object obj){
		if(!(obj instanceof ArrayList<?>)){ 
			System.out.println("Error in MultiMultipleChoiceQuestion.getScore, -1 was returned");
			return -1;
		}
		ArrayList<Integer> answer = (ArrayList<Integer>) obj;
		ArrayList<Integer> answerIDs = this.getAnswerIDs();
		return new MultiMultipleChoiceAnswer(answerIDs.get(0),this.getConnection()).getScore(answer);
	}
	
}
>>>>>>> .r42
