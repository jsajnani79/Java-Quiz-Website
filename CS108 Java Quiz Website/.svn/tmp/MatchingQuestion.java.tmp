<<<<<<< .mine
//package QuizProject.QuestionPackage;
//
//import java.util.ArrayList;
//import java.util.Set;
//
//
//public class MatchingQuestion extends Question {
//
//	ArrayList<String> firstSet;
//	ArrayList<String> secondSet;
//	ArrayList<Integer> indexArray;
//	
//	public MatchingQuestion(String question, ArrayList<String> firstSet, ArrayList<String> secondSet, ArrayList<Integer> indexArray) {
//		super(question);
//		this.firstSet = firstSet;
//		this.secondSet = secondSet;
//		this.indexArray = indexArray;
//	}
//	
//	public int getScore(Object obj){ //obj should be ArrayList<Integer>, if not it throws back 0 and prints an exception
//		if(!(obj instanceof ArrayList<?>)) {
//			System.out.println("Error in MatchingQuestion.getScore, -1 was returned");
//			return -1;
//		}
//		ArrayList<Integer> userAnswers = (ArrayList<Integer>) obj;
//		if(userAnswers.size() != indexArray.size()) return 0;
//		for(int i = 0;i<indexArray.size();i++){
//			if(userAnswers.get(i) != indexArray.get(i)) return 0;
//		}
//		return 1;
//	}
//	
//	public int getMaxScore(){
//		return 1;
//	}
//}
=======
package QuizProject.QuestionPackage;

import java.util.ArrayList;
import java.util.Set;

import QuizProject.DBConnection;


public class MatchingQuestion extends Question {

	public MatchingQuestion(int id, DBConnection connection){
		super (id, connection);
	}
	
	public void createModelObject(String backgroundText, String questionText, ArrayList<Set<String>> actualAnswers) {
		this.createModelObject(backgroundText, questionText, null, null, null, actualAnswers);
	}
	
	protected void createModelObject(String backgroundText, String questionText, String pictureURL, ArrayList<String> possibleAnswers, ArrayList<Object> additionalParameters, ArrayList<Set<String>> actualAnswers) {
		ArrayList<Object> parameters = new ArrayList<Object>();

		if (additionalParameters != null) {
			parameters.addAll(additionalParameters);
		}

		super.createModelObject(backgroundText, questionText, pictureURL, possibleAnswers, parameters);
		
		for (int i = 0; i < actualAnswers.size(); i++){
			MatchingAnswer ans = new MatchingAnswer(0,this.getConnection());
			ans.createModelObject(this.getID(), i, new ArrayList<String>(actualAnswers.get(i)));
		}
	}
	
	public int getMaxScore(){
		return 1;
	}
	
	@Override
	public int getScore(Object obj) {
		if(!(obj instanceof ArrayList<?>)){ 
			System.out.println("Error in MatchingQuestion.Score, -1 was returned");
			return -1;
		}
		ArrayList<Integer> answerIDs = this.getAnswerIDs();
		ArrayList<Integer> userAnswers = (ArrayList<Integer>) obj;
		if(userAnswers.size() != answerIDs.size()) return 0;
		for(int i = 0;i<answerIDs.size();i++){
			if(new MatchingAnswer(answerIDs.get(i),this.getConnection()).getScore(userAnswers.get(i)) != 1) return 0;
		}
		return 1;
	}
	
	/*ArrayList<String> firstSet;
	ArrayList<String> secondSet;
	ArrayList<Integer> indexArray;
	
	public MatchingQuestion(String question, ArrayList<String> firstSet, ArrayList<String> secondSet, ArrayList<Integer> indexArray) {
		super(question);
		this.firstSet = firstSet;
		this.secondSet = secondSet;
		this.indexArray = indexArray;
	}
	
	public int getScore(Object obj){ //obj should be ArrayList<Integer>, if not it throws back 0 and prints an exception
		if(!(obj instanceof ArrayList<?>)) {
			System.out.println("Error in MatchingQuestion.getScore, -1 was returned");
			return -1;
		}
		ArrayList<Integer> userAnswers = (ArrayList<Integer>) obj;
		if(userAnswers.size() != indexArray.size()) return 0;
		for(int i = 0;i<indexArray.size();i++){
			if(userAnswers.get(i) != indexArray.get(i)) return 0;
		}
		return 1;
	}
	
	public int getMaxScore(){
		return 1;
	}*/
}
>>>>>>> .r42
